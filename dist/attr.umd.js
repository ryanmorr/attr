/*! @ryanmorr/attr v0.2.0 | https://github.com/ryanmorr/attr */function _typeof2(a){"@babel/helpers - typeof";return _typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof2(a)}(function(a,b){"object"===("undefined"==typeof exports?"undefined":_typeof2(exports))&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.attr=b())})(this,function(){"use strict";function a(b){"@babel/helpers - typeof";return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},a(b)}function b(b){return"object"===a(b)?JSON.stringify(b):b}function c(a){var b="";if("string"==typeof a)return a;if(Array.isArray(a)&&0<a.length)for(var d,e=0,f=a.length;e<f;e++)""!==(d=c(a[e]))&&(b+=(b&&" ")+d);else for(var g in a)a[g]&&(b+=(b&&" ")+g);return b}function d(a){if("true"===a)return!0;if("false"===a)return!1;if("null"===a)return null;if("undefined"!==a){if(a===+a+"")return+a;if(g.test(a))try{return JSON.parse(a)}catch(a){// eslint-disable no-empty
}return a}}function e(a,b,c){if("class"===b||"className"===b)return a.getAttribute("class");if("style"===b)return a.style.cssText.split(";").reduce(function(a,b){if(b){var c=b.split(":");a[c[0].trim()]=c[1].trim()}return a},{});if("data"===b||"dataset"===b){var e={};for(var f in a.dataset)e[f]=d(a.dataset[f]);return e}return!c&&b in a?a[b]:a.getAttribute(b)}function f(d,g,i){if("object"===a(g))return Object.keys(g).forEach(function(a){return f(d,a,g[a])});if(g.startsWith("on"))return void d.addEventListener(g.slice(2).toLowerCase(),i);var j=d instanceof SVGElement;if("function"==typeof i&&(i=i(d,e(d,g,j))),null!=i&&("class"===g||"className"===g)&&(i=c(i)),"style"===g){if("string"==typeof i)d.style.cssText=i;else for(var l in i){var m=null==i[l]?"":i[l];"number"==typeof m&&!1===h.test(l)&&(m+="px"),l.includes("-")?d.style.setProperty(l,m):d.style[l]=m}}else if("data"===g||"dataset"===g)for(var n in i)d.dataset[n]=b(i[n]);else!j&&"form"!==g&&"list"!==g&&g in d?d[g]=null==i?"":i:null==i||!1===i?d.removeAttribute(g):j&&g in k?d.setAttributeNS(k[g],g,i):d.setAttribute(g,i)}var g=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,h=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i,i="http://www.w3.org/1999/xlink",j="http://www.w3.org/XML/1998/namespace",k={"xlink:actuate":i,"xlink:arcrole":i,"xlink:href":i,"xlink:role":i,"xlink:show":i,"xlink:title":i,"xlink:type":i,"xml:base":j,"xml:lang":j,"xml:space":j};return f});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
